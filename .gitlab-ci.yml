stages:
  - setup
  - test
  - build

# Setup Stage - Install dependencies and check environment
setup_backend:
  image: maven:3.9.6-eclipse-temurin-21
  stage: setup
  script:
    - cd backend/Gallery
    - echo "Checking if backend is running..."
    - |
      if ! curl -s --head --request GET http://localhost:8080/actuator/health | grep "200 OK" > /dev/null; then
        echo "Backend is not running. Starting backend..."
        nohup mvn spring-boot:run -f ../backend/pom.xml &  
        sleep 20
      else
        echo "Backend is already running."
      fi
    - mvn --version
    - mvn validate
    - curl -s http://localhost:8080/api/test-endpoint  # Basic API endpoint check
    - echo "Backend setup complete"

setup_frontend:
  image: node:20
  stage: setup
  script:
    - cd frontend  
    - node -v
    - npm install
    - npm run check  # Linting or other checks
    - npm run build  # Verify frontend build
    - echo "Frontend setup complete"

# Test Stage - Run tests to ensure everything works
test_backend:
  image: maven:3.9.6-eclipse-temurin-21
  stage: test
  script:
    - cd backend/Gallery
    - mvn test  # Unit tests for backend
    - mvn verify  # Ensure all tests pass
    - mvn spring-boot:run -DskipTests  # Ensure backend runs without errors
    - curl -s http://localhost:8080/api/important-endpoint  # Test critical API response
    - echo "Backend tests complete"
  tags:
    - docker

test_frontend:
  image: node:20
  stage: test
  script:
    - cd frontend  
    - npm run test  # Run frontend unit tests
    - npm run lint  # Run linting to catch syntax issues
    - npm run test:e2e  # Run end-to-end tests (if applicable)
    - npm run coverage  # Check test coverage
    - echo "Frontend tests complete"
  tags:
    - docker

# Build Stage - Compile and prepare project for deployment
build_backend:
  image: maven:3.9.6-eclipse-temurin-21
  stage: build
  script:
    - cd backend/Gallery
    - mvn compile
    - mvn package  # Create a deployable package (e.g., JAR)
    - echo "Backend build complete"
  tags:
    - docker

build_frontend:
  image: node:20
  stage: build
  script:
    - cd frontend
    - npm install 
    - npm install -g vite
    - npm run build  # Build the frontend
    - echo "Frontend build complete"
  tags:
    - docker
