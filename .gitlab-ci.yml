stages:
  - setup
  - test
  - build

# Setup Stage - Install dependencies and check environment
setup_backend:
  image: maven:3.9.6-eclipse-temurin-21
  stage: setup
  script:
    - cd backend/Gallery
    - echo "Checking if backend is running..."
    - |
      # Try to check if the backend is running (example: using health endpoint)
      if ! curl -s --head --request GET http://localhost:8080/actuator/health | grep "200 OK" > /dev/null; then
        echo "Backend is not running. Starting backend..."
        nohup mvn spring-boot:run -f ../backend/pom.xml &  
        # Wait for the backend to fully start (you can increase this time based on your app's startup time)
        sleep 20
      else
        echo "Backend is already running."
      fi
    - mvn --version
    - mvn validate
    - echo "Backend setup complete"

setup_frontend:
  image: node:20
  stage: setup
  script:
    - cd frontend  
    - node -v
    - npm install 
    - npm run check  
    - echo "Frontend setup complete"

# Test Stage - Run tests to ensure everything works
test_backend:
  image: maven:3.9.6-eclipse-temurin-21
  stage: test
  script:
    - cd backend/Gallery
    - mvn test
    - echo "Backend tests complete"
  tags:
    - docker

test_frontend:
  image: node:20
  stage: test
  script:
    - cd frontend  
    - npm run test   
    - echo "Frontend tests complete"
  tags:
    - docker

# Build Stage - Compile and prepare project for deployment
build_backend:
  image: maven:3.9.6-eclipse-temurin-21
  stage: build
  script:
    - cd backend/Gallery
    - mvn compile 
    - echo "Backend build complete"
  tags:
    - docker

build_frontend:
  image: node:20
  stage: build
  script:
    - cd frontend
    - npm install 
    - npm install -g vite
    - npm run build 
    - echo "Frontend build complete"
  tags:
    - docker

